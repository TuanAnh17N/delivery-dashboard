name: Build

on:
  workflow_call:
    inputs:
      mode:
        required: true
        type: string
        description:
          mode as expected by `cc-utils/.github/workflows/prepare`
          either of
          - snapshot
          -release
jobs:
  prepare:
    uses: gardener/cc-utils/.github/workflows/prepare.yaml@master
    with:
      mode: ${{ inputs.mode }}

  normalize-registry:
    runs-on: ubuntu-latest
    outputs:
      oci-registry: ${{ steps.lowercase.outputs.oci-registry }}
    steps:
      - name: Convert owner to lowercase
        id: lowercase
        run: |
          echo "oci-registry=ghcr.io/$(echo '${{ github.repository_owner }}' | tr '[:upper:]' '[:lower:]')" >> $GITHUB_OUTPUT

  lint:
    runs-on: ubuntu-latest
    needs:
      - prepare
    steps:
      - uses: actions/checkout@v4
      - name: Run Linter and SAST
        uses: addnab/docker-run-action@v3
        with:
          image: europe-docker.pkg.dev/gardener-project/releases/ocm-gear/delivery-dashboard-linter:latest
          options: -v ${{ github.workspace }}:/workspace -w /workspace
          run: |
            .ci/lint eslint.sast.config.mjs

  docker-image:
    name: Build OCI Image
    needs:
      - prepare
      - normalize-registry
    permissions:
      contents: read
      packages: write
      id-token: write
    uses: gardener/cc-utils/.github/workflows/oci-ocm.yaml@master
    with:
      name: delivery-dashboard
      version: ${{ needs.prepare.outputs.version }}
      oci-registry: ${{ needs.normalize-registry.outputs.oci-registry }}
      oci-repository: odg/delivery-dashboard
      dockerfile: Dockerfile
      ctx: oci-images
      oci-platforms: linux/amd64,linux/arm64
      ocm-labels: |
        name: gardener.cloud/cve-categorisation
        value:
          network_exposure: public
          authentication_enforced: false
          user_interaction: end-user
          confidentiality_requirement: none
          integrity_requirement: high
          availability_requirement: high

  helmchart:
    name: Build Helmchart
    needs:
      - prepare
      - docker-image
      - normalize-registry
    permissions:
      contents: read
      packages: write
      id-token: write
    uses: gardener/cc-utils/.github/workflows/helmchart-ocm.yaml@master
    with:
      name: delivery-dashboard
      dir: charts/delivery-dashboard
      oci-registry: ${{ needs.normalize-registry.outputs.oci-registry }}
      oci-repository: charts/odg
      ocm-mappings: |
        - ref: ocm-resource:delivery-dashboard.repository
          attribute: image.repository
        - ref: ocm-resource:delivery-dashboard.tag
          attribute: image.tag
        - ref: ocm-resource:busybox.repository
          attribute: busybox.image.repository
        - ref: ocm-resource:busybox.tag
          attribute: busybox.image.tag

